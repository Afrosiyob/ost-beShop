{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ost-beShop\\\\src\\\\layouts\\\\AccountDetails\\\\AccountDetails.jsx\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { MDBBtn, MDBCol, MDBRow } from \"mdbreact\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\"; // const initialValues = {\n//   firstName: \"\",\n//   lastName: \"\",\n//   email: \"\",\n//   file: \"\",\n// };\n// const validationSchema = Yup.object().shape({\n//   firstName: Yup.string().required(\"Required!\"),\n//   lastName: Yup.string().required(\"Required!\"),\n//   email: Yup.string().email(\"Email is not valid !\").required(\"Required!\"),\n// });\n// const Error = ({ touched, message }) => {\n//   if (!touched) {\n//     return <div className=\"form-message invalid\"> &nbsp; </div>;\n//   }\n//   if (message) {\n//     return <div className=\"form-message invalid\"> {message} </div>;\n//   }\n//   return <div className=\"form-message valid\"> all good </div>;\n// };\n\nfunction AccountDetails() {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  console.log(watch(\"example\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border rounded overflow-hidden px-md-5 py-md-4 p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"My Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-muted text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"billing address\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"needs-validation \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    className: \"grey-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    type: \"text\",\n    id: \"firstName\",\n    className: \"form-control\",\n    placeholder: \"First name\",\n    required: true,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    className: \"grey-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"lastName\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lastName\",\n    type: \"text\",\n    id: \"lastName\",\n    className: \"form-control\",\n    placeholder: \"Last Name\",\n    required: true,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"grey-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    id: \"email\",\n    className: \"form-control\",\n    placeholder: \"email\",\n    required: true,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Looks good!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroupFileAddon01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"inputGroupFile01\",\n    \"aria-describedby\": \"inputGroupFileAddon01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"inputGroupFile01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Choose file\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \" submit \")));\n}\n\nexport default AccountDetails;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/ost-beShop/src/layouts/AccountDetails/AccountDetails.jsx"],"names":["ErrorMessage","Field","Form","Formik","MDBBtn","MDBCol","MDBRow","React","Yup","axios","useForm","AccountDetails","register","handleSubmit","watch","errors","onSubmit","data","console","log"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { MDBBtn, MDBCol, MDBRow } from \"mdbreact\";\r\nimport React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// const initialValues = {\r\n//   firstName: \"\",\r\n//   lastName: \"\",\r\n//   email: \"\",\r\n//   file: \"\",\r\n// };\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//   firstName: Yup.string().required(\"Required!\"),\r\n//   lastName: Yup.string().required(\"Required!\"),\r\n//   email: Yup.string().email(\"Email is not valid !\").required(\"Required!\"),\r\n// });\r\n\r\n// const Error = ({ touched, message }) => {\r\n//   if (!touched) {\r\n//     return <div className=\"form-message invalid\"> &nbsp; </div>;\r\n//   }\r\n//   if (message) {\r\n//     return <div className=\"form-message invalid\"> {message} </div>;\r\n//   }\r\n//   return <div className=\"form-message valid\"> all good </div>;\r\n// };\r\n\r\nfunction AccountDetails() {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  console.log(watch(\"example\"));\r\n\r\n  return (\r\n    <div className=\"border rounded overflow-hidden px-md-5 py-md-4 p-3\">\r\n      <h5 className=\"font-weight-bold\">My Address</h5>\r\n      <div className=\"mt-3\">\r\n        <h6 className=\"text-muted text-uppercase\">billing address</h6>\r\n        <hr />\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"needs-validation \">\r\n        <div className=\"mb-3\">\r\n          {\" \"}\r\n          <label htmlFor=\"firstName\" className=\"grey-text\">\r\n            First name\r\n          </label>\r\n          <input\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            className=\"form-control\"\r\n            placeholder=\"First name\"\r\n            required\r\n            ref={register}\r\n          />\r\n          <div className=\"valid-feedback\">Looks good!</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          {\" \"}\r\n          <label htmlFor=\"lastName\" className=\"grey-text\">\r\n            lastName\r\n          </label>\r\n          <input\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Last Name\"\r\n            required\r\n            ref={register}\r\n          />\r\n          <div className=\"valid-feedback\">Looks good!</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          {\" \"}\r\n          <label htmlFor=\"email\" className=\"grey-text\">\r\n            email\r\n          </label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"email\"\r\n            required\r\n            ref={register}\r\n          />\r\n          <div className=\"valid-feedback\">Looks good!</div>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n              Upload\r\n            </span>\r\n          </div>\r\n          <div className=\"custom-file\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"custom-file-input\"\r\n              id=\"inputGroupFile01\"\r\n              aria-describedby=\"inputGroupFileAddon01\"\r\n            />\r\n            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n              Choose file\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\"> submit </button>\r\n      </form>\r\n\r\n      {/* <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true);\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            axios\r\n              .post(`http://localhost:8000/`, JSON.stringify(values))\r\n              .then((res) => {\r\n                console.log(res);\r\n              });\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }, 500);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            {JSON.stringify(values)}\r\n            <div className=\"my-3\">\r\n              <label htmlFor=\"firstName\">enter first name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                placeholder=\"firstName\"\r\n                value={values.firstName}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={\r\n                  touched.firstName && errors.firstName\r\n                    ? \"has-error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n              />\r\n\r\n              <small>\r\n                {\" \"}\r\n                <Error\r\n                  touched={touched.firstName}\r\n                  message={errors.firstName}\r\n                />{\" \"}\r\n              </small>\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <label htmlFor=\"lastName\">enter last name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                placeholder=\"lastName\"\r\n                value={values.lastName}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={\r\n                  touched.lastName && errors.lastName\r\n                    ? \"has-error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n              />\r\n              <small>\r\n                {\" \"}\r\n                <Error\r\n                  touched={touched.lastName}\r\n                  message={errors.lastName}\r\n                />{\" \"}\r\n              </small>\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <label htmlFor=\"email\">enter first name</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"email\"\r\n                value={values.email}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={\r\n                  touched.email && errors.email\r\n                    ? \"has-error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n              />\r\n              <small>\r\n                {\" \"}\r\n                <Error touched={touched.email} message={errors.email} />{\" \"}\r\n              </small>\r\n            </div>\r\n\r\n            <div className=\"my-3\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik> */}\r\n\r\n      {/* <Formik\r\n        validationSchema={validationSchema}\r\n        initialValues={initialValues}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n\r\n            setSubmitting(true);\r\n            axios\r\n              .post(`https://jsonplaceholder.typicode.com/posts`, values)\r\n              .then((res) => {\r\n                console.log(res);\r\n              });\r\n            console.log(JSON.stringify(values));\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }, 1000);\r\n        }}\r\n      >\r\n        {(formProps) => (\r\n          <Form>\r\n            <MDBRow>\r\n              <MDBCol sm=\"12\" md=\"3\">\r\n                <div className=\"mt-3\">\r\n                  <label htmlFor=\"firstName\">\r\n                    <small>\r\n                      <b>First Name</b>\r\n                    </small>\r\n                  </label>\r\n                  <Field\r\n                    className=\"form-control rounded-pill\"\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"Tyumen\"\r\n                  />\r\n                  <small style={{ color: \"red\" }}>\r\n                    <ErrorMessage name=\"firstName\">\r\n                      {(msg) => <div>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </small>\r\n                </div>\r\n              </MDBCol>\r\n              <MDBCol sm=\"12\" md=\"3\">\r\n                <div className=\"mt-3\">\r\n                  <label htmlFor=\"lastName\">\r\n                    <small>\r\n                      <b>Last Name</b>\r\n                    </small>\r\n                  </label>\r\n                  <Field\r\n                    className=\"form-control rounded-pill\"\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Tyumen\"\r\n                  />\r\n                  <small style={{ color: \"red\" }}>\r\n                    <ErrorMessage name=\"lastName\">\r\n                      {(msg) => <div>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </small>\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n              <MDBCol md=\"6\" sm=\"12\">\r\n                <div className=\"mt-3\">\r\n                  <label htmlFor=\"email\">\r\n                    <small>\r\n                      <b>E-mail address</b>\r\n                    </small>\r\n                  </label>\r\n                  <Field\r\n                    className=\"form-control rounded-pill\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Tyumen\"\r\n                  />\r\n                  <small style={{ color: \"red\" }}>\r\n                    <ErrorMessage name=\"email\">\r\n                      {(msg) => <div>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </small>\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n              <MDBCol md=\"6\" sm=\"12\">\r\n                <div className=\"mt-3\">\r\n                  <label htmlFor=\"file\">\r\n                    <small>\r\n                      <b>E-mail address</b>\r\n                    </small>\r\n                  </label>\r\n\r\n                  <label\r\n                    htmlFor=\"file\"\r\n                    className=\"w-100  overflow-hidden rounded-pill border d-flex justify-content-end\"\r\n                  >\r\n                    <div className=\"w-75 px-2 py-1\"> fgwefwefwe </div>\r\n                    <div className=\"p-1 w-25 d-flex  justify-content-center align-content-center align-items-center bg-primary\">\r\n                      <svg\r\n                        width=\"26\"\r\n                        height=\"26\"\r\n                        viewBox=\"0 0 26 26\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <g clipPath=\"url(#clip0)\">\r\n                          <path\r\n                            d=\"M21.6627 9.55722C20.461 4.77019 15.6063 1.86369 10.8193 3.06535C7.07834 4.00445 4.36199 7.23769 4.08212 11.0845C1.42589 11.5225 -0.372331 14.0309 0.0657104 16.6871C0.455109 19.0486 2.50127 20.7779 4.89453 20.7684H8.95658V19.1436H4.89453C3.09981 19.1436 1.64489 17.6887 1.64489 15.894C1.64489 14.0993 3.09981 12.6443 4.89453 12.6443C5.34323 12.6443 5.70694 12.2806 5.70694 11.8319C5.70288 7.79378 8.97319 4.51692 13.0113 4.51291C16.5069 4.50941 19.516 6.98066 20.1922 10.4102C20.259 10.7526 20.5369 11.0142 20.8828 11.0601C23.1038 11.3764 24.6478 13.4333 24.3316 15.6543C24.0476 17.6486 22.3448 19.1336 20.3303 19.1436H17.0807V20.7684H20.3303C23.4711 20.759 26.0095 18.2051 26 15.0644C25.992 12.4499 24.2025 10.1777 21.6627 9.55722Z\"\r\n                            fill=\"white\"\r\n                          />\r\n                          <path\r\n                            d=\"M12.4411 12.88L9.19141 16.1296L10.3369 17.2751L12.2055 15.4147V23.2057H13.8303V15.4147L15.6907 17.2751L16.8362 16.1296L13.5866 12.88C13.2697 12.565 12.7579 12.565 12.4411 12.88Z\"\r\n                            fill=\"white\"\r\n                          />\r\n                        </g>\r\n                        <defs>\r\n                          <clipPath id=\"clip0\">\r\n                            <rect width=\"26\" height=\"26\" fill=\"white\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                      </svg>\r\n                    </div>\r\n                  </label>\r\n\r\n                  <input\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      formProps.setFieldValue(\"file\", e.target.files[0]);\r\n                    }}\r\n                  />\r\n\r\n                  <small style={{ color: \"red\" }}>\r\n                    <ErrorMessage name=\"file\">\r\n                      {(msg) => <div>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </small>\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <div className=\"mt-3 \">\r\n              <MDBBtn\r\n                color=\"primary\"\r\n                className=\"rounded-pill text-uppercase\"\r\n                rounded\r\n                type=\"submit\"\r\n              >\r\n                Edit\r\n              </MDBBtn>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountDetails;\r\n"]},"metadata":{},"sourceType":"module"}